name: Build RPM

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
    secrets:
      gpgkey:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      skip: ${{ steps.repo.outputs.cache-hit }}
    container:
      image: registry.fedoraproject.org/fedora:${{ vars.RELEASEVER }}
      options: --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if repo exists
        uses: actions/cache/restore@v4
        id: repo
        with:
          lookup-only: true
          path: ${{ inputs.package }}-repo
          key: ${{ inputs.package }}-repo-${{ hashFiles(format('packages/{0}/{0}.spec', inputs.package)) }}

      - name: Prepare
        if: steps.repo.outputs.cache-hit != 'true'
        run: |
          dnf -y up && dnf -y install --nodocs --setopt=install_weak_deps=0 \
            distribution-gpg-keys \
            fuse-overlayfs \
            git-core \
            mock \
            podman \
            rpmdevtools
          mkdir ${{ inputs.package }}-repo

      - name: Build
        if: steps.repo.outputs.cache-hit != 'true'
        run: |
          pushd packages/${{ inputs.package }}
          spectool -g ./${{ inputs.package }}.spec
          mock -r fedora-${{ vars.RELEASEVER }}-x86_64 --spec ${{ inputs.package }}.spec --sources . --resultdir ../../${{ inputs.package }}-resultdir

      - name: Save resultdir
        if: steps.repo.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ inputs.package }}-resultdir
          key: ${{ inputs.package }}-resultdir-${{ hashFiles(format('packages/{0}/{0}.spec', inputs.package)) }}

  sign:
    runs-on: ubuntu-latest
    if: needs.build.outputs.skip != 'true'
    needs: [build]
    permissions:
      contents: read
    container:
      image: registry.fedoraproject.org/fedora:${{ vars.RELEASEVER }}
      options: --privileged

    steps:
      - name: Prepare
        run: |
          dnf -y up && dnf -y install --nodocs \
            createrepo_c \
            gnupg2 \
            rpm-sign

          cat << EOF > ~/.rpmmacros
          %_signature gpg
          %_gpg_name ${{ github.repository_owner }}
          %_gpgbin /usr/bin/gpg2
          EOF

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download resultdir
        uses: actions/cache/restore@v4
        with:
          fail-on-cache-miss: true
          path: ${{ inputs.package }}-resultdir
          key: ${{ inputs.package }}-resultdir-${{ hashFiles(format('packages/{0}/{0}.spec', inputs.package)) }}

      - name: Sign
        env:
          GPGKEY: ${{ secrets.GPGKEY }}
        run: |
          echo "$GPGKEY" > ${{ github.repository_owner }}.private
          gpg --import ${{ github.repository_owner }}.private
          rpm --addsign ./${{ inputs.package }}-resultdir/*.rpm
          mv ${{ inputs.package }}-resultdir ${{ inputs.package }}-resultdir-signed

      - name: Create repo
        run: |
          mv ${{ inputs.package }}-resultdir-signed ${{ inputs.package }}-repo
          pushd ${{ inputs.package }}-repo
          createrepo_c .

      - name: Save repo
        uses: actions/cache/save@v4
        with:
          path: ${{ inputs.package }}-repo
          key: ${{ inputs.package }}-repo-${{ hashFiles(format('packages/{0}/{0}.spec', inputs.package)) }}
